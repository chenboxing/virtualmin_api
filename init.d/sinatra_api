#!/bin/bash
### BEGIN INIT INFO
# Provides:          redmine
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: redmine webrick
# Description:       redmine webrick server autostart-script
### END INIT INFO
 
#. /lib/lsb/init-functions
 
# Modify it to your configuration

# source function library
. /etc/rc.d/init.d/functions



 

DIR=/var/virtualmin_api/

lockfile=/var/virtualmin_api/api.pid

ret=0

# Start Redmine in daemon mode.
start(){
	#log_daemon_msg "Starting Sinatra API WebRick"
  echo "Start Sinatra API"
	cd $DIR
	#log_progress_msg
  #ruby ./ssl_api &> /dev/null
  RACK_ENV='production' nohup /usr/local/bin/ruby ./api.rb >> ./log.txt 2>&1 &
  ret=$?
  
  if [ $ret == 0 ]; then
    touch $lockfile
  fi
  return $ret  
  #log_progress_msg
	#log_end_msg 0
}
 
# Stop Redmine daemon
stop(){
	#log_daemon_msg "Stopping Sinatra API WebRick"
	RUBYPID=`ps aux | grep "api.rb" | grep -v grep | awk '{print $2}'`
	#log_progress_msg
	if [ "x$RUBYPID" != "x" ]; then
		kill -2 $RUBYPID
	fi
  ret=$?
  if [ $ret == 0 ]; then
    rm -f $lockfile
  fi
  return $ret  
	#log_end_msg 0
}
 
# Check if Redmine is running
status(){
	RUBYPID=`ps aux | grep "api.rb" | grep -v grep | awk '{print $2}'`
	if [ "x$RUBYPID" = "x" ]; then
		echo "* Sinatra API is not running"
	else
		echo "* Sinatra API is running"
	fi
}
 
 
case "$1" in
	start)
		start
		;;
	
	stop)
		stop
		;;
	
	status)
		status
		;;
	
	restart|force-reload)
		stop
		start
		;;
 
	*)
		echo "Usage: $0 {start|stop|restart|force-reload|status}"
		exit 1
 
esac
